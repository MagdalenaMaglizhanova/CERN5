import streamlit as st
import plotly.graph_objects as go
import numpy as np
import pandas as pd
from datetime import datetime
import os

st.set_page_config(page_title="–°–∏–º—É–ª–∞—Ü–∏—è –Ω–∞ —Å–±–ª—ä—Å—ä–∫ - CERN", layout="wide")

# --- SESSION STATE –∑–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏—è ---
if "step" not in st.session_state:
    st.session_state.step = 1

def next_step():
    st.session_state.step += 1

def prev_step():
    if st.session_state.step > 1:
        st.session_state.step -= 1

# –ó–∞–≥–ª–∞–≤–∏–µ –∏ –º–µ–Ω—é –Ω–∞–ø—Ä–µ–¥/–Ω–∞–∑–∞–¥
st.title("üî¨ –°–∏–º—É–ª–∞—Ü–∏—è –Ω–∞ —Å–±–ª—ä—Å—ä–∫ –Ω–∞ —á–∞—Å—Ç–∏—Ü–∏ - –û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª–µ–Ω –º–æ–¥—É–ª CERN")

st.write(f"### –°—Ç—ä–ø–∫–∞ {st.session_state.step} –æ—Ç 5")

col_nav = st.columns([1,1,1])
with col_nav[0]:
    if st.session_state.step > 1:
        st.button("‚¨Ö –ù–∞–∑–∞–¥", on_click=prev_step)
with col_nav[2]:
    if st.session_state.step < 5:
        st.button("–ù–∞–ø—Ä–µ–¥ ‚û°", on_click=next_step)

st.markdown("---")

# --- –°—Ç—ä–ø–∫–∞ 1: –í—ä–≤–µ–¥–µ–Ω–∏–µ —Å –∞–Ω–∏–º–∞—Ü–∏—è ---
if st.session_state.step == 1:
    st.header("üëÄ –ö–∞–∫–≤–æ –µ —Å–±–ª—ä—Å—ä–∫ –Ω–∞ —á–∞—Å—Ç–∏—Ü–∏?")
    st.markdown("""
    –í –¶–ï–†–ù —É—Å–∫–æ—Ä–∏—Ç–µ–ª–∏—Ç–µ —Å–±–ª—ä—Å–∫–≤–∞—Ç —á–∞—Å—Ç–∏—Ü–∏ —Å –º–Ω–æ–≥–æ –≤–∏—Å–æ–∫–∏ —Å–∫–æ—Ä–æ—Å—Ç–∏,  
    –∑–∞ –¥–∞ —Ä–∞–∑–±–µ—Ä–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä–∞—Ç–∞ –Ω–∞ –º–∞—Ç–µ—Ä–∏—è—Ç–∞ –∏ –≤—Å–µ–ª–µ–Ω–∞—Ç–∞.  
    –í–∏–∂—Ç–µ –∫—Ä–∞—Ç–∫–∞ –∞–Ω–∏–º–∞—Ü–∏—è, –∫–æ—è—Ç–æ –ø–æ–∫–∞–∑–≤–∞ –∫–∞–∫ –ø—Ä–æ—Ç–æ–Ω–∏—Ç–µ —Å–µ —Å–±–ª—ä—Å–∫–≤–∞—Ç –≤ –≥–æ–ª–µ–º–∏—è –∞–¥—Ä–æ–Ω–µ–Ω –∫–æ–ª–∞–π–¥–µ—Ä (LHC).
    """)
    
    # –í–≥—Ä–∞–∂–¥–∞–Ω–µ –Ω–∞ YouTube –≤–∏–¥–µ–æ (–º–æ–∂–µ –¥–∞ —Å–µ —Å–º–µ–Ω–∏ —Å –¥—Ä—É–≥–æ)
    st.video("https://www.youtube.com/watch?v=V68v-R6nwsE")
    
    st.markdown("""
    –°–ª–µ–¥ –∫–∞—Ç–æ —Ä–∞–∑–≥–ª–µ–¥–∞—Ö—Ç–µ –∞–Ω–∏–º–∞—Ü–∏—è—Ç–∞, –ø—Ä–µ–º–∏–Ω–µ—Ç–µ –Ω–∞–ø—Ä–µ–¥, –∑–∞ –¥–∞ —Å–∏–º—É–ª–∏—Ä–∞–º–µ —Å–±–ª—ä—Å—ä–∫ —Å–∞–º–∏.
    """)

# --- –°—Ç—ä–ø–∫–∞ 2: –í—ä–≤–µ–∂–¥–∞–Ω–µ –Ω–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –∏ —Å–∏–º—É–ª–∞—Ü–∏—è ---
elif st.session_state.step == 2:
    st.header("üß™ –ó–∞–¥–∞–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –∏ –ø—É—Å–Ω–µ—Ç–µ —Å–∏–º—É–ª–∞—Ü–∏—è")

    col1, col2 = st.columns(2)

    with col1:
        m1 = st.number_input("–ú–∞—Å–∞ –Ω–∞ —á–∞—Å—Ç–∏—Ü–∞ 1 (kg)", min_value=0.1, value=5.0, step=0.1)
        v1 = st.number_input("–°–∫–æ—Ä–æ—Å—Ç –Ω–∞ —á–∞—Å—Ç–∏—Ü–∞ 1 (m/s)", value=5.0, step=0.1)

    with col2:
        m2 = st.number_input("–ú–∞—Å–∞ –Ω–∞ —á–∞—Å—Ç–∏—Ü–∞ 2 (kg)", min_value=0.1, value=5.0, step=0.1)
        v2 = st.number_input("–°–∫–æ—Ä–æ—Å—Ç –Ω–∞ —á–∞—Å—Ç–∏—Ü–∞ 2 (m/s)", value=-3.0, step=0.1)

    if st.button("‚ñ∂ –ü—É—Å–Ω–∏ —Å–∏–º—É–ª–∞—Ü–∏—è—Ç–∞"):

        # –ò–∑—á–∏—Å–ª—è–≤–∞–Ω–µ –Ω–∞ —Å–∫–æ—Ä–æ—Å—Ç–∏—Ç–µ —Å–ª–µ–¥ –µ–ª–∞—Å—Ç–∏—á–µ–Ω —Å–±–ª—ä—Å—ä–∫
        v1_final = ((m1 - m2) / (m1 + m2)) * v1 + ((2 * m2) / (m1 + m2)) * v2
        v2_final = ((2 * m1) / (m1 + m2)) * v1 + ((m2 - m1) / (m1 + m2)) * v2

        # –ó–∞–ø–∏—Å–≤–∞–º–µ –≤ —Å–µ—Å–∏—è –∑–∞ —Å–ª–µ–¥–≤–∞—â–∏—Ç–µ —Å—Ç—ä–ø–∫–∏
        st.session_state.m1 = m1
        st.session_state.v1 = v1
        st.session_state.m2 = m2
        st.session_state.v2 = v2
        st.session_state.v1_final = v1_final
        st.session_state.v2_final = v2_final
        st.success("–°–∏–º—É–ª–∞—Ü–∏—è—Ç–∞ –µ –≥–æ—Ç–æ–≤–∞! –ü—Ä–µ–º–∏–Ω–∏ –∫—ä–º —Å–ª–µ–¥–≤–∞—â–∞—Ç–∞ —Å—Ç—ä–ø–∫–∞.")
        st.session_state.step = 3
        st.experimental_rerun()

# --- –°—Ç—ä–ø–∫–∞ 3: –í—ä–≤–µ–∂–¥–∞–Ω–µ –Ω–∞ —Ö–∏–ø–æ—Ç–µ–∑–∞ ---
elif st.session_state.step == 3:
    st.header("ü§î –ö–∞–∫–≤–æ –æ—á–∞–∫–≤–∞—à –¥–∞ —Å–µ —Å–ª—É—á–∏?")

    hypothesis = st.text_area("–í—ä–≤–µ–¥–∏ —Å–≤–æ—è—Ç–∞ —Ö–∏–ø–æ—Ç–µ–∑–∞ –∑–∞ —Å–∫–æ—Ä–æ—Å—Ç–∏—Ç–µ –∏ –µ–Ω–µ—Ä–≥–∏—è—Ç–∞ —Å–ª–µ–¥ —Å–±–ª—ä—Å—ä–∫–∞:", height=150)
    if st.button("üì§ –ò–∑–ø—Ä–∞—Ç–∏ —Ö–∏–ø–æ—Ç–µ–∑–∞—Ç–∞"):
        if hypothesis.strip():
            # –ó–∞–ø–∏—Å–≤–∞–Ω–µ –≤ CSV —Ñ–∞–π–ª
            file = "hypotheses.csv"
            df = pd.DataFrame([{
                "timestamp": datetime.now().isoformat(),
                "mass1": st.session_state.m1,
                "velocity1": st.session_state.v1,
                "mass2": st.session_state.m2,
                "velocity2": st.session_state.v2,
                "hypothesis": hypothesis
            }])
            if os.path.exists(file):
                df.to_csv(file, mode='a', index=False, header=False)
            else:
                df.to_csv(file, index=False)

            st.success("–•–∏–ø–æ—Ç–µ–∑–∞—Ç–∞ —Ç–∏ –µ –∑–∞–ø–∏—Å–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
            st.session_state.user_hypothesis = hypothesis
            st.session_state.step = 4
            st.experimental_rerun()
        else:
            st.warning("–ú–æ–ª—è, –≤—ä–≤–µ–¥–∏ —Ç–µ–∫—Å—Ç –≤ —Ö–∏–ø–æ—Ç–µ–∑–∞—Ç–∞.")

# --- –°—Ç—ä–ø–∫–∞ 4: –ü–æ–∫–∞–∑–≤–∞–Ω–µ –Ω–∞ —Ä–µ–∑—É–ª—Ç–∞—Ç–∏ –∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ ---
elif st.session_state.step == 4:
    st.header("üìâ –†–µ–∑—É–ª—Ç–∞—Ç–∏ –æ—Ç —Å–±–ª—ä—Å—ä–∫–∞")

    m1 = st.session_state.m1
    v1 = st.session_state.v1
    m2 = st.session_state.m2
    v2 = st.session_state.v2
    v1_final = st.session_state.v1_final
    v2_final = st.session_state.v2_final

    impulse_before = m1 * v1 + m2 * v2
    impulse_after = m1 * v1_final + m2 * v2_final
    energy_before = 0.5 * m1 * v1 ** 2 + 0.5 * m2 * v2 ** 2
    energy_after = 0.5 * m1 * v1_final ** 2 + 0.5 * m2 * v2_final ** 2

    st.write(f"**–ò–º–ø—É–ª—Å –ø—Ä–µ–¥–∏ —Å–±–ª—ä—Å—ä–∫–∞:** {impulse_before:.2f} kg¬∑m/s")
    st.write(f"**–ò–º–ø—É–ª—Å —Å–ª–µ–¥ —Å–±–ª—ä—Å—ä–∫–∞:** {impulse_after:.2f} kg¬∑m/s")
    st.write(f"**–ö–∏–Ω–µ—Ç–∏—á–Ω–∞ –µ–Ω–µ—Ä–≥–∏—è –ø—Ä–µ–¥–∏ —Å–±–ª—ä—Å—ä–∫–∞:** {energy_before:.2f} J")
    st.write(f"**–ö–∏–Ω–µ—Ç–∏—á–Ω–∞ –µ–Ω–µ—Ä–≥–∏—è —Å–ª–µ–¥ —Å–±–ª—ä—Å—ä–∫–∞:** {energy_after:.2f} J")

    st.markdown("""
    ---  
    ### –í—ä–ø—Ä–æ—Å–∏ –∑–∞ —Ä–∞–∑–º–∏—Å—ä–ª:

    - –ó–∞–ø–∞–∑–≤–∞ –ª–∏ —Å–µ –∏–º–ø—É–ª—Å—ä—Ç?
    - –ó–∞–ø–∞–∑–≤–∞ –ª–∏ —Å–µ –∫–∏–Ω–µ—Ç–∏—á–Ω–∞—Ç–∞ –µ–Ω–µ—Ä–≥–∏—è?
    - –ö–∞–∫–≤–æ –±–∏ —Å–µ —Å–ª—É—á–∏–ª–æ –∞–∫–æ –º–∞—Å–∏—Ç–µ —Å–µ –ø—Ä–æ–º–µ–Ω—è—Ç?
    - –ö–∞–∫—ä–≤ —Ç–∏–ø —Å–±–ª—ä—Å—ä–∫ –Ω–∞–±–ª—é–¥–∞–≤–∞–º–µ?
    """)

    if st.button("–ù–∞–ø—Ä–µ–¥ –∫—ä–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"):
        st.session_state.step = 5
        st.experimental_rerun()

# --- –°—Ç—ä–ø–∫–∞ 5: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å –≤—Å–∏—á–∫–∏ —Ö–∏–ø–æ—Ç–µ–∑–∏ ---
elif st.session_state.step == 5:
    st.header("üìä –ö–∞–∫ —Å–∞ —Å–µ —Å–ø—Ä–∞–≤–∏–ª–∏ –¥—Ä—É–≥–∏ —É—á–µ–Ω–∏—Ü–∏?")

    file = "hypotheses.csv"
    if os.path.exists(file):
        df = pd.read_csv(file)
        st.write(f"–û–±—â–æ –∑–∞–ø–∏—Å–∞–Ω–∏ —Ö–∏–ø–æ—Ç–µ–∑–∏: {len(df)}")
        st.dataframe(df.tail(10))
    else:
        st.info("–í—Å–µ –æ—â–µ –Ω—è–º–∞ –∑–∞–ø–∏—Å–∞–Ω–∏ —Ö–∏–ø–æ—Ç–µ–∑–∏.")

    st.markdown("–ú–æ–∂–µ—à –¥–∞ —Å–µ –≤—ä—Ä–Ω–µ—à –Ω–∞–∑–∞–¥ –∏ –¥–∞ –æ–ø–∏—Ç–∞—à —Å –Ω–æ–≤–∏ —Å—Ç–æ–π–Ω–æ—Å—Ç–∏ –∏–ª–∏ —Ö–∏–ø–æ—Ç–µ–∑–∏.")

