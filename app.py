import streamlit as st
import plotly.graph_objects as go
import numpy as np
import pandas as pd
from datetime import datetime
import os

st.set_page_config(page_title="–°–∏–º—É–ª–∞—Ü–∏—è –Ω–∞ —Å–±–ª—ä—Å—ä–∫ - CERN", layout="wide")

# –ó–∞–≥–ª–∞–≤–∏–µ –∏ –º–µ–Ω—é –Ω–∞–ø—Ä–µ–¥/–Ω–∞–∑–∞–¥
st.title("–°–∏–º—É–ª–∞—Ü–∏—è –Ω–∞ —Å–±–ª—ä—Å—ä–∫ –Ω–∞ —á–∞—Å—Ç–∏—Ü–∏ - –û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª–µ–Ω –º–æ–¥—É–ª CERN")

# --- –°—Ç—ä–ø–∫–∞ 1: –í—ä–≤–µ–¥–µ–Ω–∏–µ —Å –∞–Ω–∏–º–∞—Ü–∏—è ---
if st.session_state.step == 1:
    st.header("üëÄ –ö–∞–∫–≤–æ –µ —Å–±–ª—ä—Å—ä–∫ –Ω–∞ —á–∞—Å—Ç–∏—Ü–∏?")
    st.markdown("""
    –í –¶–ï–†–ù —É—Å–∫–æ—Ä–∏—Ç–µ–ª–∏—Ç–µ —Å–±–ª—ä—Å–∫–≤–∞—Ç —á–∞—Å—Ç–∏—Ü–∏ —Å –º–Ω–æ–≥–æ –≤–∏—Å–æ–∫–∏ —Å–∫–æ—Ä–æ—Å—Ç–∏,  
    –∑–∞ –¥–∞ —Ä–∞–∑–±–µ—Ä–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä–∞—Ç–∞ –Ω–∞ –º–∞—Ç–µ—Ä–∏—è—Ç–∞ –∏ –≤—Å–µ–ª–µ–Ω–∞—Ç–∞.  
    –í–∏–∂—Ç–µ –∫—Ä–∞—Ç–∫–∞ –∞–Ω–∏–º–∞—Ü–∏—è, –∫–æ—è—Ç–æ –ø–æ–∫–∞–∑–≤–∞ –∫–∞–∫ –ø—Ä–æ—Ç–æ–Ω–∏—Ç–µ —Å–µ —Å–±–ª—ä—Å–∫–≤–∞—Ç –≤ –≥–æ–ª–µ–º–∏—è –∞–¥—Ä–æ–Ω–µ–Ω –∫–æ–ª–∞–π–¥–µ—Ä (LHC).
    """)
    
    # –í–≥—Ä–∞–∂–¥–∞–Ω–µ –Ω–∞ YouTube –≤–∏–¥–µ–æ (–º–æ–∂–µ –¥–∞ —Å–µ —Å–º–µ–Ω–∏ —Å –¥—Ä—É–≥–æ)
    st.video("https://www.youtube.com/watch?v=Yq0zeWX49SM")
    
    st.markdown("""
–¢–æ–≤–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–∏–º—É–ª–∏—Ä–∞ —Å–±–ª—ä—Å—ä–∫ –º–µ–∂–¥—É –¥–≤–µ —á–∞—Å—Ç–∏—Ü–∏ –≤ –µ–¥–Ω–∞ –ª–∏–Ω–∏—è (X-–æ—Å—Ç–∞).  
–ú–æ–∂–µ—Ç–µ –¥–∞ –ø—Ä–æ–º–µ–Ω—è—Ç–µ –º–∞—Å–∞—Ç–∞ –∏ —Å–∫–æ—Ä–æ—Å—Ç—Ç–∞ –Ω–∞ —á–∞—Å—Ç–∏—Ü–∏—Ç–µ –∏ –¥–∞ –Ω–∞–±–ª—é–¥–∞–≤–∞—Ç–µ –∫–∞–∫ —Ç–æ–≤–∞ –≤–ª–∏—è–µ –Ω–∞ —Ä–µ–∑—É–ª—Ç–∞—Ç–∏—Ç–µ.  
–°–ª–µ–¥ –∞–Ω–∏–º–∞—Ü–∏—è—Ç–∞ —â–µ –≤–∏–¥–∏—Ç–µ —á–∏—Å–ª–æ–≤–∏ —Å—Ç–æ–π–Ω–æ—Å—Ç–∏ –∏ –≤—ä–ø—Ä–æ—Å–∏ –∑–∞ —Ä–∞–∑–º–∏—Å—ä–ª.
""")

# –í—ä–≤–µ–∂–¥–∞–Ω–µ –Ω–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –æ—Ç —É—á–µ–Ω–∏–∫–∞
col1, col2 = st.columns(2)

with col1:
    m1 = st.number_input("–ú–∞—Å–∞ –Ω–∞ —á–∞—Å—Ç–∏—Ü–∞ 1 (kg)", min_value=0.1, value=5.0, step=0.1)
    v1 = st.number_input("–°–∫–æ—Ä–æ—Å—Ç –Ω–∞ —á–∞—Å—Ç–∏—Ü–∞ 1 (m/s)", value=5.0, step=0.1)

with col2:
    m2 = st.number_input("–ú–∞—Å–∞ –Ω–∞ —á–∞—Å—Ç–∏—Ü–∞ 2 (kg)", min_value=0.1, value=5.0, step=0.1)
    v2 = st.number_input("–°–∫–æ—Ä–æ—Å—Ç –Ω–∞ —á–∞—Å—Ç–∏—Ü–∞ 2 (m/s)", value=-3.0, step=0.1)

# –ò–∑—á–∏—Å–ª—è–≤–∞–º–µ –∫—Ä–∞–π–Ω–∏ —Å–∫–æ—Ä–æ—Å—Ç–∏ –ø—Ä–∏ –µ–ª–∞—Å—Ç–∏—á–µ–Ω —Å–±–ª—ä—Å—ä–∫
v1_final = ((m1 - m2) / (m1 + m2)) * v1 + ((2 * m2) / (m1 + m2)) * v2
v2_final = ((2 * m1) / (m1 + m2)) * v1 + ((m2 - m1) / (m1 + m2)) * v2

# –ü–æ–¥–≥–æ—Ç–≤—è–º–µ —Ç—Ä–∞–µ–∫—Ç–æ—Ä–∏–∏
t = np.linspace(0, 2, 30)
x1 = v1 * t
x2 = 10 + v2 * t  # –≤—Ç–æ—Ä–∞—Ç–∞ —á–∞—Å—Ç–∏—Ü–∞ –∑–∞–ø–æ—á–≤–∞ –æ—Ç –ø–æ–∑–∏—Ü–∏—è 10

# –°—ä–∑–¥–∞–≤–∞–º–µ –∫–∞–¥—Ä–∏ –∑–∞ –∞–Ω–∏–º–∞—Ü–∏—è
frames = []
for i in range(len(t)):
    frames.append(go.Frame(data=[
        go.Scatter3d(x=[x1[i]], y=[0], z=[0], mode='markers+text',
                     marker=dict(size=10, color='blue'),
                     text=["–ß–∞—Å—Ç–∏—Ü–∞ 1"], textposition="top center"),
        go.Scatter3d(x=[x2[i]], y=[0], z=[0], mode='markers+text',
                     marker=dict(size=10, color='red'),
                     text=["–ß–∞—Å—Ç–∏—Ü–∞ 2"], textposition="top center")
    ]))

layout = go.Layout(
    scene=dict(
        xaxis=dict(range=[-10, 30], title='–ü–æ–∑–∏—Ü–∏—è X'),
        yaxis=dict(range=[-5, 5], title='Y'),
        zaxis=dict(range=[-5, 5], title='Z'),
    ),
    title="3D –ê–Ω–∏–º–∞—Ü–∏—è –Ω–∞ —Å–±–ª—ä—Å—ä–∫",
    margin=dict(l=0, r=0, b=0, t=40),
    height=500,
    updatemenus=[dict(type="buttons", showactive=False,
                      buttons=[dict(label="‚ñ∂ –ü—É—Å–Ω–∏ –∞–Ω–∏–º–∞—Ü–∏—è—Ç–∞",
                                    method="animate",
                                    args=[None, {"frame": {"duration": 100, "redraw": True},
                                                 "fromcurrent": True}])])]
)

fig = go.Figure(
    data=[
        go.Scatter3d(x=[x1[0]], y=[0], z=[0], mode='markers', marker=dict(size=10, color='blue')),
        go.Scatter3d(x=[x2[0]], y=[0], z=[0], mode='markers', marker=dict(size=10, color='red'))
    ],
    layout=layout,
    frames=frames
)

st.plotly_chart(fig)

# –ü–æ–∫–∞–∑–≤–∞–Ω–µ –Ω–∞ —Ä–µ–∑—É–ª—Ç–∞—Ç–∏
st.markdown("## –†–µ–∑—É–ª—Ç–∞—Ç–∏ –æ—Ç —Å–±–ª—ä—Å—ä–∫–∞")

impulse_before = m1 * v1 + m2 * v2
impulse_after = m1 * v1_final + m2 * v2_final

energy_before = 0.5 * m1 * v1 ** 2 + 0.5 * m2 * v2 ** 2
energy_after = 0.5 * m1 * v1_final ** 2 + 0.5 * m2 * v2_final ** 2

st.write(f"**–ò–º–ø—É–ª—Å –ø—Ä–µ–¥–∏ —Å–±–ª—ä—Å—ä–∫–∞:** {impulse_before:.2f} kg¬∑m/s")
st.write(f"**–ò–º–ø—É–ª—Å —Å–ª–µ–¥ —Å–±–ª—ä—Å—ä–∫–∞:** {impulse_after:.2f} kg¬∑m/s")
st.write(f"**–ö–∏–Ω–µ—Ç–∏—á–Ω–∞ –µ–Ω–µ—Ä–≥–∏—è –ø—Ä–µ–¥–∏ —Å–±–ª—ä—Å—ä–∫–∞:** {energy_before:.2f} J")
st.write(f"**–ö–∏–Ω–µ—Ç–∏—á–Ω–∞ –µ–Ω–µ—Ä–≥–∏—è —Å–ª–µ–¥ —Å–±–ª—ä—Å—ä–∫–∞:** {energy_after:.2f} J")

st.markdown("""
---

### –í—ä–ø—Ä–æ—Å–∏ –∑–∞ —Ä–∞–∑–º–∏—Å—ä–ª

- –ó–∞–ø–∞–∑–≤–∞ –ª–∏ —Å–µ –∏–º–ø—É–ª—Å—ä—Ç?
- –ó–∞–ø–∞–∑–≤–∞ –ª–∏ —Å–µ –∫–∏–Ω–µ—Ç–∏—á–Ω–∞—Ç–∞ –µ–Ω–µ—Ä–≥–∏—è?
- –ö–∞–∫ –º–∞—Å–∞—Ç–∞ –∏ —Å–∫–æ—Ä–æ—Å—Ç—Ç–∞ –Ω–∞ —á–∞—Å—Ç–∏—Ü–∏—Ç–µ –≤–ª–∏—è—è—Ç –Ω–∞ —Ä–µ–∑—É–ª—Ç–∞—Ç–∞?
- –ö–∞–∫—ä–≤ —Ç–∏–ø —Å–±–ª—ä—Å—ä–∫ –µ —Ç–æ–≤–∞ (–µ–ª–∞—Å—Ç–∏—á–µ–Ω, –Ω–µ–µ–ª–∞—Å—Ç–∏—á–µ–Ω)?
""")

# –í—ä–∑–º–æ–∂–Ω–æ—Å—Ç —É—á–µ–Ω–∏–∫—ä—Ç –¥–∞ –≤—ä–≤–µ–¥–µ —Å–≤–æ—è —Ö–∏–ø–æ—Ç–µ–∑–∞ –∏ –¥–∞ —è –∏–∑–ø—Ä–∞—Ç–∏
st.markdown("---")
st.markdown("### –í—ä–≤–µ–¥–∏ —Å–≤–æ—è —Ö–∏–ø–æ—Ç–µ–∑–∞ –∑–∞ —Ä–µ–∑—É–ª—Ç–∞—Ç–∞ –æ—Ç —Å–±–ª—ä—Å—ä–∫–∞:")

hypothesis = st.text_area("–ö–∞–∫–≤–æ –æ—á–∞–∫–≤–∞—à –¥–∞ —Å–µ —Å–ª—É—á–∏ —Å—ä—Å —Å–∫–æ—Ä–æ—Å—Ç–∏—Ç–µ –∏ –µ–Ω–µ—Ä–≥–∏—è—Ç–∞?")

if st.button("–ò–∑–ø—Ä–∞—Ç–∏ —Ö–∏–ø–æ—Ç–µ–∑–∞—Ç–∞"):
    if hypothesis.strip() == "":
        st.warning("–ú–æ–ª—è, –≤—ä–≤–µ–¥–∏ —Ç–µ–∫—Å—Ç –∑–∞ —Ö–∏–ø–æ—Ç–µ–∑–∞—Ç–∞ —Å–∏.")
    else:
        st.success("–•–∏–ø–æ—Ç–µ–∑–∞—Ç–∞ —Ç–∏ –µ –∏–∑–ø—Ä–∞—Ç–µ–Ω–∞! –ú–Ω–æ–≥–æ –¥–æ–±—Ä–µ, —á–µ –º–∏—Å–ª–∏—à –∞–∫—Ç–∏–≤–Ω–æ!")
        # –¢—É–∫ –º–æ–∂–µ –¥–∞ –¥–æ–±–∞–≤–∏—à –∫–æ–¥ –∑–∞ –∑–∞–ø–∏—Å –≤ –±–∞–∑–∞ –∏–ª–∏ –ª–æ–≥, –∞–∫–æ –∂–µ–ª–∞–µ—à –∏ –≤—Å–∏—á–∫–æ —Å–µ –∫–∞—á–≤–∞ –≤ streamlit. —Ç–∏ –∫–∞–∫–≤–æ —â–µ –ø—Ä–µ–¥–ª–æ–∂–∏—à?
